import os
import time
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

from utils import generer_graphique_tendance, generer_nuage_mots

class Watcher:
    DIRECTORY_TO_WATCH = "./books"

    def __init__(self):
        self.observer = Observer()

    def run(self):
        event_handler = Handler()
        self.observer.schedule(event_handler, self.DIRECTORY_TO_WATCH, recursive=True)
        self.observer.start()
        try:
            while True:
                time.sleep(5)
        except KeyboardInterrupt:
            self.observer.stop()
            print("Observer Stopped")

        self.observer.join()

class Handler(FileSystemEventHandler):

    @staticmethod
    def on_any_event(event):
        if event.is_directory:
            # Un nouveau dossier a été ajouté
            new_directory = event.src_path
            print(f'New directory {new_directory} detected!')

            # Générer les fichiers pour le nouveau dossier
            mots_occurrence_file = os.path.join(new_directory, 'mots_occurrence.txt')
            nuage_mots_file = generer_nuage_mots(new_directory, mots_occurrence_file)
            mots_poids_file = os.path.join(new_directory, 'mots_poids.txt')
            diagramme_tendance_file = generer_graphique_tendance(new_directory, mots_poids_file)

if __name__ == '__main__':
    w = Watcher() 
    w.run()
